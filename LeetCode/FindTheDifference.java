package LeetCode;

import java.util.Arrays;

/*
https://leetcode.com/problems/find-the-difference/
You are given two strings s and t.

String t is generated by random shuffling string s and then add one more letter at a random position.

Return the letter that was added to t.



Example 1:

Input: s = "abcd", t = "abcde"
Output: "e"
Explanation: 'e' is the letter that was added.
Example 2:

Input: s = "", t = "y"
Output: "y"


Constraints:

0 <= s.length <= 1000
t.length == s.length + 1
 */
public class FindTheDifference {

    // Approach1 time complexity nlogn , space complexity o(n)
    public char findTheDifference(String s, String t) {
        if(s.length() == 0) return t.charAt(0);

        char[] s1 = s.toCharArray();
        char[] t1 = t.toCharArray();

        Arrays.sort(s1);
        Arrays.sort(t1);

        for(int i = 0 ; i <s1.length ; i++){
            if(t1[i] != s1[i]) return t1[i];
        }

        return t1[t1.length-1];
    }

    // By using bits Operations . time complexity o(n) space complexity o(1)
    public char findTheDifference2(String s, String t) {
        char ch = 0;
        for(char cs : s.toCharArray())  ch ^= cs;
        for(char ct : t.toCharArray()) ch ^= ct;

        return ch;
    }


}
